plugins {
  id "com.avast.gradle.docker-compose" version "0.4.3"
}

// fix windows paths, replace all "\\" with "/"
def root = rootDir.absolutePath.replaceAll("\\\\", "/")

dockerCompose {
  useComposeFiles = ["$root/docker/docker-compose.yml"]
  captureContainersOutput = true
  stopContainers = true
  removeContainers = true
  removeImages = "Local"
  removeVolumes = true
  removeOrphans = true
  projectName = "$rootProject.name"
}

/*
docker push daggerok/openshift-spring-boot-mysql-app:v1
docker push daggerok/openshift-spring-boot-mysql-app:latest
*/

def username = project.hasProperty("dockerHubUsername") ? project.property("dockerHubUsername") : ""

task docker(type: Exec) {
  shouldRunAfter ":build"
  executable "bash"
  args "-c", """
docker build --rm -t $username/$rootProject.name $rootDir.absolutePath ;
docker tag $username/$rootProject.name:latest $username/$rootProject.name ;
docker push $username/$rootProject.name
"""
}

//import java.time.LocalDateTime
//import java.time.format.DateTimeFormatter
//def tag = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd-HH-mm"))
//  args "-c", "docker tag $username/$rootProject.name:latest $username/$rootProject.name:$tag"
//  args "-c", "docker push $username/$rootProject.name:$tag"
